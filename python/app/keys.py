v1 = 'l/g'
v2 = 'n/g'

def count(entity_type):
    return '_'.join([entity_type, 'count'])
entity_crunchbase = 'crunchbase'
entity_count = 'entity_count'
entity_ts_rank = 'ts_rank'
entity_name = 'name'
entity_name_alt = 'name_alt'
entity_site = 'site'
entity_league = 'league'
entity_profile = 'profile'
entity_profile_url = 'profile_url'
entity_match_linkedin = 'match_linkedin'
entity_match_twitter = 'match_twitter'
entity_match_instagram = 'match_instagram'
entity_match_facebook = 'match_facebook'
entity_match_snapchat = 'match_snapchat'
entity_match_not_twitter = 'match_not_twitter'
entity_latlong = 'latlong'
entity_data = 'data'
entity_facebook_id = 'facebook_id'
entity_instagram_id = 'instagram_id'
entity_twitter_id = 'twitter_id'
entity_snapchat = 'snapchat'
entity_instagram = 'instagram'
entity_facebook = 'facebook'
entity_google = 'google'
entity_youtube = 'youtube'
entity_pinterest = 'pinterest'
entity_wikipedia = 'wikipedia'
entity_linkedin = 'linkedin'
entity_angelco = 'angelco'
entity_twitter = 'twitter'
entity_team = 'team'
entity_incubator = 'incubator'
entity_website = 'website'
entity_index = 'index'
entity_pic = 'pic'
entity_lingo = 'lingo'
entity_language = 'language'
entity_sum_tweeters = 'sum_tweeters'
entity_stock_quote = 'stock_quote'
entity_sacks = 'sacks'
entity_high_school = 'high_school'
entity_inside_20 = 'inside_20'
entity_experience = 'experience'
entity_event_date = 'event_date'
entity_forced_fumbles = 'forced_fumbles'
entity_tackles = 'tackles'
entity_interceptions = 'interceptions'
entity_field_goals_made = 'field_goals_made'
entity_field_goals_attempted = 'field_goals_attempted'
entity_yards = 'yards'
entity_receptions = 'receptions'
entity_touchdowns = 'touchdowns'
entity_punts = 'punts'
entity_average = 'average'
entity_long = 'long'
entity_carries = 'carries'
entity_percentage = 'percentage'
entity_rating = 'rating'
entity_email = 'email'
entity_matches = 'matches'
entity_flag = 'flag'
entity_carnumber = 'carnumber'
entity_carmake = 'carmake'
entity_link = 'link'
entity_prior_exp = 'prior_exp'
entity_topic = 'topic'
entity_starts = 'starts' 
entity_points_behind = 'points_behind'
entity_emblem = 'emblem'
entity_key_execs = 'key_execs'
entity_firstadded = 'firstadded'
entity_reports = 'reports'
entity_private_exp = 'private_exp'
entity_firm = 'firm'
entity_investments = 'investments'
entity_last_valuation = 'last_valuation'
entity_total_funding = 'total_funding'
entity_valuation = 'valuation'
entity_wins = 'wins'
entity_loses = 'loses'
entity_ties = 'ties'
entity_dnf = 'dnf' 
entity_top5 = 'top5'
entity_top10 = 'top10'
entity_ratio = 'ratio'
entity_rounds = 'rounds'
entity_assumed_office = 'assumed_office'
entity_investors = 'investors'
entity_company = 'company'
entity_noted = 'noted'
entity_career = 'career'
entity_party = 'party'
entity_terms = 'terms'
entity_religion = 'religion'
entity_funding = 'funding'
entity_funding_date = 'funding_date'
entity_deals = 'deals'
entity_side = 'side'
entity_sponsor = 'sponsor'
entity_salary = 'salary' 
entity_college = 'college'
entity_bowls = 'bowls'
entity_wicket_keeper = 'wicket_keeper'
entity_term_expires = 'term_expires'
entity_prizemoney = 'prizemoney'
entity_debut = 'debut'
entity_runs = 'runs'
entity_ceo = 'ceo'
entity_founded = 'founded'
entity_founding_round = 'founding_round'
entity_raised = 'raised'
entity_founders = 'founders'
entity_closed = 'closed'
entity_division = 'division'
entity_logo_external = 'logo_external'
entity_emblem_key = 'emblem_key'
entity_subindustry = 'subindustry'
entity_filings = 'filings'
entity_security = 'security'
entity_industry = 'industry'
entity_exchange = 'exchange'
entity_price = 'price'
entity_share_float = 'share_float'
entity_circulating_supply = 'circulating_supply'
entity_market_cap = 'market_cap'
entity_competitors = 'competitors'
entity_headquarters = 'headquarters'
entity_foreign = 'foreign'
entity_captain = 'captain'
entity_porn_style = 'porn_style'
entity_location = 'location'
entity_carlogo = 'carlogo'
entity_state = 'state'
entity_key = 'key'
entity_titles = 'titles'
entity_resides = 'resides'
entity_bracelets = 'bracelets'
entity_rings = 'rings'
entity_cashes = 'cashes'
entity_earnings = 'earnings'
entity_hudl = 'hudl'
entity_gender = 'gender'
entity_bio = 'bio'
entity_points = 'points'
entity_sponsors = 'sponsors'
entity_designation = 'designation'
entity_appearances = 'appearances'
entity_age = 'age'
entity_pay = 'pay'
entity_wickets ='wickets'
entity_homegrown ='homegrown'
entity_games = 'games'
entity_games_started = 'games_started'
entity_continent = 'continent'
entity_country = 'country'
entity_rpg = 'rpg'
entity_apg = 'apg'
entity_ppg = 'ppg'
entity_prior = 'prior'
entity_years = 'years'
entity_description = 'description'
entity_batch = 'batch'
entity_tags = 'tags'
entity_throws = 'throws'
entity_bats = 'bats'
entity_born = 'born'
entity_dob = 'dob'
entity_icon = 'icon'
entity_standing = 'standing'
entity_record = 'record'
entity_origin = 'origin'
entity_height = 'height'
entity_weight = 'weight'
entity_weightclass = 'weightclass'
entity_reach = 'reach'
entity_summary = 'summary'
entity_nationality = 'nationality'
entity_jersey = 'jersey'
entity_jersey_pic = 'jersey_pic'
entity_excercised = 'excercised'
entity_position_alt = 'position_alt'
entity_position = 'position'
entity_international = 'international'
entity_source_twitter = 'source_twitter'
entity_source_instagram = 'source_instagram'
entity_assists = 'assists'
entity_goals = 'goals'
entity_yellows = 'yellows'
entity_reds = 'reds'
entity_class = 'class'
entity_employees = 'employees'
entity_status = 'status'
entity_sector = 'sector'
entity_date_added = 'date_added'
entity_mission = 'mission'
entity_sck = 'sck'
entity_colors = 'colors'
entity_noted_profile = 'noted_profile'
entity_shoots = 'shoots'
entity_blog = 'blog'
entity_rank = 'rank'
entity_stance = 'stance'
entity_circuit = 'circuit'
entity_self_rep = 'self_rep'
entity_style = 'style'
entity_source_id = 'source_id'
entity_nickname = 'nickname'
entity_notrades = 'notrades'
entity_no_drops = 'no_drops'
_keys_entity = [eval(key) for key in list(dir()) if key.startswith('entity_')]

social_keys = [entity_twitter_id, entity_twitter, entity_facebook, entity_wikipedia, entity_instagram, entity_instagram_id, entity_linkedin, entity_snapchat, entity_match_twitter]

def already_exists(league_name, social_key, social_value):
    from amazon.dynamo import Entity
    league_count = Entity().query_count(league__eq=league_name, query_filter={ social_key + '__eq': social_value})
    return league_count > 0